=Malicious Software=

Malware annoys users or damages their data
 - Worms and viruses self-replicate
 - A Virus infects (embeds itself in) other programs or data files
 - A virus needs a user to help it spread, commonly macro-enabled email attachments

==Worms==

Worms are standalone programs that do not require a user to run it in order for it to spread. Worms exploit vulnerabilities in the destination system and spread automatically.

==Trojans==

Trojans are malicious pieces of software that masquerade as something innocuous or useful. They cannot self-replicate, but they open up backdoors in your computer to the Internet so that the processing power, Internet bandwidth and data can be exploited remotely.

==Phishing==

Phishing is a form of social engineering used to manipulate a victim into visiting a fake website and giving away personal information, such as bank account details. Vulnerable groups include old people and young children.


==Code Quality==

Improving code quality, together with monitoring attempts to gain unauthorised access and protection can significantly reduce threats from malware.
Measures include:
 - Guarding against buffer overflow attacks
 - Guarding against SQL injection attacks
 - Use of strong passwords for login credentials
 - Two-factor authentication
 - Use of access rights and privileges

===Buffer Overflow===

Buffer overflows occur when a program accidentally writes data to a location too small to handle it. As a result, the overflowed data may end up in neighbouring instruction space.
Malware can deliberately cause and manipulate overflow data which may then be read as a legitimate instruction. This is a useful attack vector.

This is an extremely dangerous attack.

===SQL Injection===

A malcious user can enter SQL commands via online database forms to change the processing.

Imagine an SQL command like this:

"SELECT * FROM Customer WHERE CustID = " + textBox;
And then someone enters: 21104710; DROP TABLE Accounts;

This would cause the following SQL to be executed:
"SELECT * FROM Customer WHERE CustID = 21104710; DROP TABLE Accounts;"
And destroy your database.

This can be mitigated slightly by using different accounts for your database. You would want to use read-only accounts for things that don't need to write so that catastrophic attacks like this are not possible. However, user info can still be leaked via this.

You should sanitise any inputs for SQL so that potential SQL attacks are filtered out.


==Monitoring==

Monitoring can prevent against the threat of hacking, which can introduce malware.

These can be used to protect against the threat of malware and hacking.
 - Packet sniffing can be used to see what traffic is going through your network to try and detect malware or hackers.
 - User access logs can be used to see what users are doing what actions, which can expose hacked accounts or infected computers.


==Protection==

Up-to-date patches to the operating system and application programs reduce vulnerabilies in the system.
Up-to-date anti-malware ("anti-virus") software can prevent the spread of infection.